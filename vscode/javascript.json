{
    // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    //     "prefix": "log",
    //     "body": [
    //         "console.log('$1');",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // }
    "function": {
        "prefix": "f",
        "body": [
            "function($1) {",
            "    $2",
            "}"
        ]
    },
    "arrowFunction": {
        "prefix": "af",
        "body": [
            "($1) => {",
            "    $2",
            "}"
        ]
    },
    "namedFunction": {
        "prefix": "fn",
        "body": [
            "function $1($2) {",
            "    $3",
            "}"
        ]
    },
    "propertyFunction": {
        "prefix": "pf",
        "body": [
            "($1) {",
            "    $2",
            "}"
        ]
    },
    "exportDefault": {
        "prefix": "ed",
        "body": "export default $1"
    },
    "exportDefaultObjectAssign": {
        "prefix": "eda",
        "body": [
            "export default Object.assign({}, $1, {",
            "    $2",
            "})"
        ]
    },
    "export": {
        "prefix": "ex",
        "body": [
            "export {",
            "    $1",
            "}"
        ]
    },
    "import": {
        "prefix": "im",
        "body": "import '$1'"
    },
    "importFrom": {
        "prefix": "imf",
        "body": [
            "import $1 from '$2'"
        ]
    },
    "importAs": {
        "prefix": "ima",
        "body": "import * as $1 from '$2'"
    },
    "importMulti": {
        "prefix": "imm",
        "body": "import { $1 } from '$1'"
    },
    "return": {
        "prefix": "r",
        "body": "return $1"
    },
    "console.info": {
        "prefix": "ci",
        "body": "console.info($1)"
    },
    "console.infoString": {
        "prefix": "cis",
        "body": "console.info(`$1`)"
    },
    "console.error": {
        "prefix": "ce",
        "body": "console.error($1)"
    },
    "console.errorString": {
        "prefix": "ces",
        "body": "console.error(`$1`)"
    },
    "const": {
        "prefix": "co",
        "body": "const $1"
    },
    "let": {
        "prefix": "le",
        "body": "let $1"
    },
    "document.createElement": {
        "prefix": "doc",
        "body": "document.createElement('$1')"
    },
    "forLoop": {
        "prefix": "for",
        "body": [
            "for (let i = 0; i < $1; i++) {",
            "    $2",
            "}"
        ]
    },
    "try": {
        "prefix": "try",
        "body": [
            "try {",
            "    $1",
            "} catch (e) {",
            "    $2",
            "}"
        ]
    },
    "async": {
        "prefix": "as",
        "body": "async"
    },
    "await": {
        "prefix": "aw",
        "body": "await"
    },
    "TODO": {
        "prefix": "todo",
        "body": "// TODO"
    },
    "ObjectCreate": {
        "prefix": "oc",
        "body": "Object.create($1)"
    },
    "ObjectAssign": {
        "prefix": "oa",
        "body": "Object.assign($1)"
    },
    "forEach": {
        "prefix": "fe",
        "body": [
            "forEach(($1) => {",
            "    $2",
            "})"
        ]
    },
    "newPromise": {
        "prefix": "pr",
        "body": [
            "new Promise((resolve, reject) => {",
            "    $1",
            "})"
        ]
    },
    "then": {
        "prefix": "then",
        "body": [
            "then(($1) => {",
            "    $2",
            "})"
        ]
    },
    "catch": {
        "prefix": "catch",
        "body": [
            "catch(($1) => {",
            "    $2",
            "})"
        ]
    },
    "timeout": {
        "prefix": "timeout",
        "body": [
            "setTimeout(() => {",
            "    $2",
            "})"
        ]
    },
    "interval": {
        "prefix": "interval",
        "body": [
            "setInterval(() => {",
            "    $2",
            "})"
        ]
    },
    "todo": {
        "prefix": "td",
        "body": "// TODO "
    },
    "module.exports": {
        "prefix": "me",
        "body": "module.exports = "
    },
    "module.exports function": {
        "prefix": "mef",
        "body": [
            "module.expors = ($1) => {",
            "    $2",
            "}"
        ]
    },
    "module.exports object": {
        "prefix": "meo",
        "body": [
            "module.expors = {",
            "    $2",
            "}"
        ]
    }
}